
//noinspection LongLine
def gradleOptions = $/-Prepo_venturetech_username=$repo_venturetech_username -Prepo_venturetech_password=$repo_venturetech_password -Pcompile_libraries=true --no-daemon/$

properties[
    [$class: 'BuildDiscarderProperty', strategy:
        [$class: 'LogRotator', artifactDaysToKeepStr: '90', artifactNumToKeepStr: '20', daysToKeepStr: '90', numToKeepStr: '20']],
    [$class: 'ScannerJobProperty', doNotScan: false],
    [$class: 'GithubProjectProperty', displayName: 'Example Application',
        projectUrlStr: 'https://github.com/VentureTech/proteus-examples/'],
    [$class: 'ParametersDefinitionProperty', parameterDefinitions: [
        [$class: 'StringParameterDefinition', defaultValue: '', description: '', name: 'repo_venturetech_username'],
        [$class: 'StringParameterDefinition', defaultValue: '', description: '', name: 'repo_venturetech_password']
        ]
    ]
]

node {
    def jdkHome = tool 'JDK 8'
    stage 'Checkout'

    // Get some code from a GitHub repository
    git url: 'https://github.com/VentureTech/proteus-examples.git'
    //checkout scm

    step([$class: 'GitHubSetCommitStatusBuilder', statusMessage: [content: 'Jenkins is building changes']])

    dir('example-app') {
        def gradleProps = readFile('gradle.properties')
        echo gradleProps
        def appVersion = getAppVersion(gradleProps)
        def appName = getAppName(gradleProps)
        stage "Building $appName $appVersion"
        gradleProps = null;
        withEnv(["JAVA_HOME=$jdkHome"]){
            // Run the build
            wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'css']) {
                sh "./gradlew clean assemble $gradleOptions"
            }
        }

    }
    stash 'buildFiles'
}

stage 'Unit Tests'
node {
    def jdkHome = tool 'JDK 8'
    unstash 'buildFiles'
    dir('example-app') {
        withEnv(["JAVA_HOME=$jdkHome"]) {
            // Run the build
            wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'css']) {
                sh "./gradlew test $gradleOptions"
            }
        }
        //noinspection LongLine
        step([$class: 'JUnitResultArchiver', allowEmptyResults: true, healthScaleFactor: 2.0, keepLongStdio: true, testResults: '**/build/gradle/reports/tests/TEST*.xml'])
    }
    stash 'buildFiles'
}

stage 'Integration Tests'
node {
    def jdkHome = tool 'JDK 8'
    unstash 'buildFiles'
    dir('example-app') {
        withEnv(["JAVA_HOME=$jdkHome"]) {
            // Run the build
            wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'css']) {
                sh "./gradlew test -PtestGroups=integration $gradleOptions"
            }
        }
        //noinspection LongLine
        step([$class: 'JUnitResultArchiver', allowEmptyResults: true, healthScaleFactor: 2.0, keepLongStdio: true, testResults: '**/build/gradle/reports/tests/TEST*.xml'])
    }

    stash 'buildFiles'
}


//noinspection LongLine
//step([$class: 'GitHubCommitStatusSetter', errorHandlers: [[$class: 'ShallowAnyErrorHandler']], statusResultSource: [$class: 'ConditionalStatusResultSource', results: [[$class: 'AnyBuildResult', message: 'My Message', state: 'PENDING']]]])

@NonCPS
def getAppVersion(String text)
{
    def matcher = text =~ /app_version=(.+)/
    return matcher ? matcher[0][1] : '0.0'
}

@NonCPS
def getAppName(String text)
{
    def matcher = text =~ /app_name=(.+)/
    return matcher ? matcher[0][1] : '0.0'
}